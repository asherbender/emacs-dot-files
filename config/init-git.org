* Git

** Commit messages

Good commit hygiene also includes how commit messages are created. A
good commit message will effectively communicate your changes to
collaborators. Concise yet descriptive messages are important when
viewing the commit history. Good commit messages contain:

    1. A short description (soft limit of 50 characters) of the commit
       on the first line. The first line should ~not~ not be
       terminated by a full stop. The first line is often prefixed
       with the main location of development.

    2. A blank line.

    3. A more detailed description of the commit wrapped to 72
       characters.

An example of a good commit message is included from the [[http://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project][git
documentation]]:

#+BEGIN_EXAMPLE
    Short (50 chars or less) summary of changes

    More detailed explanatory text, if necessary.  Wrap it to
    about 72 characters or so.  In some contexts, the first
    line is treated as the subject of an email and the rest of
    the text as the body.  The blank line separating the
    summary from the body is critical (unless you omit the body
    entirely); tools like rebase can get confused if you run
    the two together.

    Further paragraphs come after blank lines.

      - Bullet points are okay, too

      - Typically a hyphen or asterisk is used for the bullet,
        preceded by a single space, with blank lines in
        between, but conventions vary here
#+END_EXAMPLE

** Transient

~Magit~ (3.3.0) depends on ~transient~.

#+BEGIN_SRC emacs-lisp
(use-package transient
  :defer t
  :config

  (defcustom user-emacs-auto-transient
    (concat user-emacs-auto-directory "transient/")
    "For auto-generated files from transient mode."
    :group 'user-emacs-auto
    :type 'directory)

  (customize-set-variable
    'transient-levels-file
    (concat user-emacs-auto-transient "levels.el"))

  (customize-set-variable
    'transient-values-file
    (concat user-emacs-auto-transient "values.el"))

  (customize-set-variable
    'transient-history-file
    (concat user-emacs-auto-transient "history.el"))
)
#+END_SRC

** Magit

#+BEGIN_SRC emacs-lisp
  (use-package magit
    :defer t
    :config
    (progn

      ;; Maximum length of summary line.
      (setq git-commit-summary-max-length 50)

      ;; Wrap text to 72 characters.
      (setq git-commit-fill-column 72)
    )
  )
#+END_SRC


** diff-hl mode

Highlight uncommitted changes on the side of the window.

#+BEGIN_SRC emacs-lisp
(use-package diff-hl
  :defer t
  :config
  (progn
    (setq diff-hl-side 'left)
    (global-diff-hl-mode)
    (diff-hl-margin-mode)
    (diff-hl-flydiff-mode)
  )
)
#+END_SRC
