* Hydra menus

Allow related commands to be grouped into [[https://github.com/abo-abo/hydra][hydra]] menus

#+begin_src emacs-lisp :exports none
(use-package hydra

  ;; Execute code after package is loaded.
  :config
  (progn
    (hydra-add-font-lock)
  )
)
#+END_SRC

** Main Hydra

Create a 'main' Hydra for launching other Hydra menus

#+BEGIN_SRC emacs-lisp
(defhydra hydra-main (:color pink)
  "
  ^^Navigation^^                     | Menus
  ^^-------------------------------^^+---------------------------------
  _h_/_H_: backward  char/word       |  _n_: Navigation
  _j_/_J_: previous  line/paragraph  |  _w_: Window management
  _k_/_K_: next      line/paragraph  |  _b_: Buffer management
  _l_/_L_: forward   char/word       |  _p_: Projectile
  _a_^^: home                        |  _m_: Magit
  _e_^^: end                         |

  "
  ("h" backward-char      nil :color red)
  ("j" next-line          nil :color red)
  ("k" previous-line      nil :color red)
  ("l" forward-char       nil :color red)
  ("H" backward-word      nil :color red)
  ("J" forward-paragraph  nil :color red)
  ("K" backward-paragraph nil :color red)
  ("L" forward-word       nil :color red)
  ("a" beginning-of-line  nil)
  ("e" move-end-of-line   nil)

  ("n" hydra-navigation/body  nil :exit t)
  ("w" hydra-window/body      nil :exit t)
  ("b" hydra-buffer/body      nil :exit t)
  ("p" hydra-project/body     nil :exit t)
  ("m" magit-status           nil :exit t)

  ("RET" nil "quit")
  ("ESC" nil "quit")
  ("SPC" nil "quit")
  ("q"   nil "quit")
)
#+END_SRC

Enable key-chords and assign a [[https://github.com/abo-abo/hydra][hydra]] menu to an infrequently used
repeat bigram (for efficiency). Bigram text analysis by [[http://norvig.com/mayzner.html][Norvig]] shows
that =jj= is an infrequent pair and on the home row, as shown below:

| Bigram | Percentage |     Counts     |
|--------+------------+----------------|
|   aa   |   0.003%   |     79,794,787 |
|   bb   |   0.011%   |    308,276,690 |
|   cc   |   0.083%   |  2,344,219,345 |
|   dd   |   0.043%   |  1,205,446,875 |
|   ee   |   0.378%   | 10,647,199,443 |
|   ff   |   0.146%   |  4,125,634,219 |
|   gg   |   0.025%   |    697,999,944 |
|   hh   |   0.001%   |     14,730,425 |
|   ii   |   0.023%   |    642,384,029 |
|   jj   |   0.000%   |      2,979,950 |
|   kk   |   0.000%   |     12,782,664 |
|   ll   |   0.577%   | 16,257,360,474 |
|   mm   |   0.096%   |  2,708,822,249 |
|   nn   |   0.073%   |  2,051,719,074 |
|   oo   |   0.210%   |  5,928,601,045 |
|   pp   |   0.137%   |  3,850,125,519 |
|   qq   |   0.000%   |      1,712,219 |
|   rr   |   0.121%   |  3,404,547,067 |
|   ss   |   0.405%   | 11,421,755,201 |
|   tt   |   0.171%   |  4,812,693,687 |
|   uu   |   0.001%   |     22,006,895 |
|   vv   |   0.000%   |      2,622,571 |
|   ww   |   0.000%   |      7,377,619 |
|   xx   |   0.003%   |     79,068,246 |
|   yy   |   0.000%   |      1,993,017 |
|   zz   |   0.003%   |     75,012,595 |

(scraped from [[[http://norvig.com/mayzner.html][source]]])

#+BEGIN_SRC emacs-lisp
(key-chord-define-global "jj" 'hydra-main/body)
#+END_SRC


** Navigation Hydra

#+BEGIN_SRC emacs-lisp
(defhydra hydra-navigation (:color blue :hint nil)
  "
  ^^Navigation^^                 ^Search^                ^Other^
  ^^--------------------------^^-^-----------------------^---------------------
  _h_/_H_: backward  char/word   _o_: helm-occur         _b_: helm-mini
  _j_/_J_: previous  line/para   _S_: helm-swoop         _f_: helm-find-files
  _k_/_K_: next      line/para   _s_: isearch forward    _F_: helm-recent-files
  _l_/_L_: forward   char/word   _r_: isearch backward   _W_: ace-window
  _c_/_w_: avy goto  char/word   ^ ^
  _a_/_e_: home/end
  _g_^^: goto line
  "

  ;; Character
  ("h" backward-char      nil :color red)
  ("j" next-line          nil :color red)
  ("k" previous-line      nil :color red)
  ("l" forward-char       nil :color red)
  ("c" avy-goto-char)

  ;; Word
  ("H" backward-word      nil :color red)
  ("J" forward-paragraph  nil :color red)
  ("K" backward-paragraph nil :color red)
  ("L" forward-word       nil :color red)
  ("w" avy-goto-word-1)

  ("g" goto-line          nil)
  ("a" beginning-of-line  nil)
  ("e" move-end-of-line   nil)

  ;; Search
  ("o" helm-occur)
  ("S" helm-swoop)
  ("s" isearch-forward)
  ("r" isearch-backward)

  ;; Other
  ("b" helm-mini)
  ("f" helm-find-files)
  ("F" helm-recentf)
  ("W" ace-window)

  ;; Quit
  ("RET" nil)
  ("ESC" nil)
  ("SPC" nil)
  ("q"   nil)
)
#+END_SRC


** Buffer Hydra

Group related buffer commands

#+BEGIN_SRC emacs-lisp
(defhydra hydra-buffer (:color pink)
  "
  ^Selection^       ^Swap^
  ^^^^^^^^------------------------------------------------------------
  _n_: next         _h_: left
  _p_: previous     _j_: down
  _b_: select       _k_: up
  _a_: jump         _l_: right
  _d_: kill

  "
  ("n" next-buffer      nil)
  ("p" previous-window  nil)
  ("b" switch-to-buffer nil :color blue)
  ("a" ace-jump-buffer  nil :color blue)
  ("d" kill-buffer      nil :color blue)

  ("h" buf-move-left   nil :color red)
  ("j" buf-move-down   nil :color red)
  ("k" buf-move-up     nil :color red)
  ("l" buf-move-right  nil :color red)

  ("<left>"  buf-move-left  nil)
  ("<down>"  buf-move-down  nil)
  ("<up>"    buf-move-up    nil)
  ("<right>" buf-move-right nil)

  ("RET" nil "quit")
  ("ESC" nil "quit")
  ("SPC" nil "quit")
  ("q"   nil "quit")
)
#+END_SRC
